{"id":"js/TestRunner.js","dependencies":[{"name":"C:\\Users\\Matthew\\Desktop\\Silver\\Notes\\.babelrc","includedInParent":true,"mtime":1568681989559},{"name":"C:\\Users\\Matthew\\Desktop\\Silver\\Notes\\package.json","includedInParent":true,"mtime":1569682411255},{"name":"./Factory","loc":{"line":1,"column":14},"parent":"C:\\Users\\Matthew\\Desktop\\Silver\\Notes\\src\\js\\TestRunner.js","resolved":"C:\\Users\\Matthew\\Desktop\\Silver\\Notes\\src\\js\\Factory.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TestRunner = void 0;\n\nvar _Factory = _interopRequireDefault(require(\"./Factory\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar TestRunner =\n/*#__PURE__*/\nfunction () {\n  function TestRunner() {\n    _classCallCheck(this, TestRunner);\n  }\n\n  _createClass(TestRunner, [{\n    key: \"runTests\",\n    value: function runTests(zOutput) {\n      var t = new _Factory.default.TestEngine();\n\n      function show(s) {\n        zOutput.appendLine(s);\n      }\n\n      t.setShowSuccess(show);\n      t.setShowFailure(show);\n      t.setShowDone(show);\n      t.testClasses(_Factory.default.classes());\n    }\n  }]);\n\n  return TestRunner;\n}();\n\nexports.TestRunner = TestRunner;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"js/TestRunner.js","original":{"line":1,"column":0}},{"name":"TestRunner","generated":{"line":18,"column":4},"source":"js/TestRunner.js","original":{"line":3,"column":6}},{"name":"zOutput","generated":{"line":27,"column":29},"source":"js/TestRunner.js","original":{"line":4,"column":10}},{"generated":{"line":27,"column":38},"source":"js/TestRunner.js","original":{"line":4,"column":19}},{"generated":{"line":28,"column":0},"source":"js/TestRunner.js","original":{"line":5,"column":2}},{"name":"t","generated":{"line":28,"column":10},"source":"js/TestRunner.js","original":{"line":5,"column":8}},{"generated":{"line":28,"column":11},"source":"js/TestRunner.js","original":{"line":5,"column":9}},{"generated":{"line":28,"column":14},"source":"js/TestRunner.js","original":{"line":5,"column":12}},{"name":"F","generated":{"line":28,"column":18},"source":"js/TestRunner.js","original":{"line":5,"column":16}},{"name":"TestEngine","generated":{"line":28,"column":35},"source":"js/TestRunner.js","original":{"line":5,"column":18}},{"generated":{"line":28,"column":45},"source":"js/TestRunner.js","original":{"line":5,"column":12}},{"generated":{"line":28,"column":47},"source":"js/TestRunner.js","original":{"line":5,"column":2}},{"generated":{"line":30,"column":0},"source":"js/TestRunner.js","original":{"line":7,"column":2}},{"name":"show","generated":{"line":30,"column":15},"source":"js/TestRunner.js","original":{"line":7,"column":11}},{"generated":{"line":30,"column":19},"source":"js/TestRunner.js","original":{"line":7,"column":2}},{"name":"s","generated":{"line":30,"column":20},"source":"js/TestRunner.js","original":{"line":7,"column":16}},{"generated":{"line":30,"column":21},"source":"js/TestRunner.js","original":{"line":7,"column":2}},{"generated":{"line":30,"column":23},"source":"js/TestRunner.js","original":{"line":7,"column":19}},{"name":"zOutput","generated":{"line":31,"column":0},"source":"js/TestRunner.js","original":{"line":8,"column":3}},{"name":"zOutput","generated":{"line":31,"column":8},"source":"js/TestRunner.js","original":{"line":8,"column":3}},{"generated":{"line":31,"column":15},"source":"js/TestRunner.js","original":{"line":8,"column":10}},{"name":"appendLine","generated":{"line":31,"column":16},"source":"js/TestRunner.js","original":{"line":8,"column":11}},{"generated":{"line":31,"column":26},"source":"js/TestRunner.js","original":{"line":8,"column":3}},{"name":"s","generated":{"line":31,"column":27},"source":"js/TestRunner.js","original":{"line":8,"column":22}},{"generated":{"line":31,"column":28},"source":"js/TestRunner.js","original":{"line":8,"column":3}},{"generated":{"line":32,"column":0},"source":"js/TestRunner.js","original":{"line":9,"column":3}},{"name":"t","generated":{"line":34,"column":0},"source":"js/TestRunner.js","original":{"line":11,"column":2}},{"name":"t","generated":{"line":34,"column":6},"source":"js/TestRunner.js","original":{"line":11,"column":2}},{"generated":{"line":34,"column":7},"source":"js/TestRunner.js","original":{"line":11,"column":3}},{"name":"setShowSuccess","generated":{"line":34,"column":8},"source":"js/TestRunner.js","original":{"line":11,"column":4}},{"generated":{"line":34,"column":22},"source":"js/TestRunner.js","original":{"line":11,"column":2}},{"name":"show","generated":{"line":34,"column":23},"source":"js/TestRunner.js","original":{"line":11,"column":19}},{"generated":{"line":34,"column":27},"source":"js/TestRunner.js","original":{"line":11,"column":2}},{"name":"t","generated":{"line":35,"column":0},"source":"js/TestRunner.js","original":{"line":12,"column":2}},{"name":"t","generated":{"line":35,"column":6},"source":"js/TestRunner.js","original":{"line":12,"column":2}},{"generated":{"line":35,"column":7},"source":"js/TestRunner.js","original":{"line":12,"column":3}},{"name":"setShowFailure","generated":{"line":35,"column":8},"source":"js/TestRunner.js","original":{"line":12,"column":4}},{"generated":{"line":35,"column":22},"source":"js/TestRunner.js","original":{"line":12,"column":2}},{"name":"show","generated":{"line":35,"column":23},"source":"js/TestRunner.js","original":{"line":12,"column":19}},{"generated":{"line":35,"column":27},"source":"js/TestRunner.js","original":{"line":12,"column":2}},{"name":"t","generated":{"line":36,"column":0},"source":"js/TestRunner.js","original":{"line":13,"column":2}},{"name":"t","generated":{"line":36,"column":6},"source":"js/TestRunner.js","original":{"line":13,"column":2}},{"generated":{"line":36,"column":7},"source":"js/TestRunner.js","original":{"line":13,"column":3}},{"name":"setShowDone","generated":{"line":36,"column":8},"source":"js/TestRunner.js","original":{"line":13,"column":4}},{"generated":{"line":36,"column":19},"source":"js/TestRunner.js","original":{"line":13,"column":2}},{"name":"show","generated":{"line":36,"column":20},"source":"js/TestRunner.js","original":{"line":13,"column":16}},{"generated":{"line":36,"column":24},"source":"js/TestRunner.js","original":{"line":13,"column":2}},{"name":"t","generated":{"line":37,"column":0},"source":"js/TestRunner.js","original":{"line":14,"column":2}},{"name":"t","generated":{"line":37,"column":6},"source":"js/TestRunner.js","original":{"line":14,"column":2}},{"generated":{"line":37,"column":7},"source":"js/TestRunner.js","original":{"line":14,"column":3}},{"name":"testClasses","generated":{"line":37,"column":8},"source":"js/TestRunner.js","original":{"line":14,"column":4}},{"generated":{"line":37,"column":19},"source":"js/TestRunner.js","original":{"line":14,"column":2}},{"name":"F","generated":{"line":37,"column":20},"source":"js/TestRunner.js","original":{"line":14,"column":16}},{"name":"classes","generated":{"line":37,"column":37},"source":"js/TestRunner.js","original":{"line":14,"column":18}},{"generated":{"line":37,"column":44},"source":"js/TestRunner.js","original":{"line":14,"column":16}},{"generated":{"line":37,"column":46},"source":"js/TestRunner.js","original":{"line":14,"column":2}},{"generated":{"line":38,"column":0},"source":"js/TestRunner.js","original":{"line":15,"column":2}}],"sources":{"js/TestRunner.js":"import F from \"./Factory\";\r\n\r\nclass TestRunner {\r\n\trunTests(zOutput) {\r\n\t\tconst t = new F.TestEngine();\r\n\r\n\t\tfunction show(s) {\r\n\t\t\tzOutput.appendLine(s);\r\n\t\t}\r\n\r\n\t\tt.setShowSuccess(show);\r\n\t\tt.setShowFailure(show);\r\n\t\tt.setShowDone(show);\r\n\t\tt.testClasses(F.classes());\r\n\t}\r\n}\r\n\r\nexport {TestRunner};"},"lineCount":null}},"error":null,"hash":"eff9aa78677f3eb167f2555f18c67424","cacheData":{"env":{}}}